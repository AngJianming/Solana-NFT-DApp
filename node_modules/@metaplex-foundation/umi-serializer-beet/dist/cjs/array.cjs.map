{"version":3,"file":"array.cjs","sources":["../../src/array.ts"],"sourcesContent":["import {\n  Serializer,\n  ArraySerializerOptions,\n  mergeBytes,\n} from '@metaplex-foundation/umi';\nimport { BeetSerializerError, DeserializingEmptyBufferError } from './errors';\nimport { getResolvedSize } from './getResolvedSize';\nimport { getSizeDescription } from './getSizeDescription';\nimport { getSizeFromChildren } from './getSizeFromChildren';\nimport { getSizePrefix } from './getSizePrefix';\nimport { u32 } from './numbers';\n\nexport function array<T, U extends T = T>(\n  item: Serializer<T, U>,\n  options: ArraySerializerOptions = {}\n): Serializer<T[], U[]> {\n  const size = options.size ?? u32();\n  if (size === 'remainder' && item.fixedSize === null) {\n    throw new BeetSerializerError(\n      'Serializers of \"remainder\" size must have fixed-size items.'\n    );\n  }\n  return {\n    description:\n      options.description ??\n      `array(${item.description}; ${getSizeDescription(size)})`,\n    fixedSize: getSizeFromChildren(size, [item.fixedSize]),\n    maxSize: getSizeFromChildren(size, [item.maxSize]),\n    serialize: (value: T[]) => {\n      if (typeof size === 'number' && value.length !== size) {\n        throw new BeetSerializerError(\n          `Expected array to have ${size} items but got ${value.length}.`\n        );\n      }\n      return mergeBytes([\n        getSizePrefix(size, value.length),\n        ...value.map((v) => item.serialize(v)),\n      ]);\n    },\n    deserialize: (bytes: Uint8Array, offset = 0) => {\n      if (typeof size === 'object' && bytes.slice(offset).length === 0) {\n        throw new DeserializingEmptyBufferError('array', []);\n      }\n      const [resolvedSize, newOffset] = getResolvedSize(\n        size,\n        [item.fixedSize],\n        bytes,\n        offset\n      );\n      offset = newOffset;\n      const values: U[] = [];\n      for (let i = 0; i < resolvedSize; i += 1) {\n        const [value, newOffset] = item.deserialize(bytes, offset);\n        values.push(value);\n        offset = newOffset;\n      }\n      return [values, offset];\n    },\n  };\n}\n"],"names":["array","item","options","size","u32","fixedSize","BeetSerializerError","description","getSizeDescription","getSizeFromChildren","maxSize","serialize","value","length","mergeBytes","getSizePrefix","map","v","deserialize","bytes","offset","slice","DeserializingEmptyBufferError","resolvedSize","newOffset","getResolvedSize","values","i","push"],"mappings":";;;;;;;;;;;;AAYO,SAASA,KAAK,CACnBC,IAAsB,EACtBC,OAA+B,GAAG,EAAE,EACd;AACtB,EAAA,MAAMC,IAAI,GAAGD,OAAO,CAACC,IAAI,IAAIC,WAAG,EAAE,CAAA;EAClC,IAAID,IAAI,KAAK,WAAW,IAAIF,IAAI,CAACI,SAAS,KAAK,IAAI,EAAE;AACnD,IAAA,MAAM,IAAIC,0BAAmB,CAC3B,6DAA6D,CAC9D,CAAA;AACH,GAAA;EACA,OAAO;AACLC,IAAAA,WAAW,EACTL,OAAO,CAACK,WAAW,IAClB,CAAQN,MAAAA,EAAAA,IAAI,CAACM,WAAY,CAAIC,EAAAA,EAAAA,qCAAkB,CAACL,IAAI,CAAE,CAAE,CAAA,CAAA;IAC3DE,SAAS,EAAEI,uCAAmB,CAACN,IAAI,EAAE,CAACF,IAAI,CAACI,SAAS,CAAC,CAAC;IACtDK,OAAO,EAAED,uCAAmB,CAACN,IAAI,EAAE,CAACF,IAAI,CAACS,OAAO,CAAC,CAAC;IAClDC,SAAS,EAAGC,KAAU,IAAK;MACzB,IAAI,OAAOT,IAAI,KAAK,QAAQ,IAAIS,KAAK,CAACC,MAAM,KAAKV,IAAI,EAAE;QACrD,MAAM,IAAIG,0BAAmB,CAC1B,CAAyBH,uBAAAA,EAAAA,IAAK,kBAAiBS,KAAK,CAACC,MAAO,CAAA,CAAA,CAAE,CAChE,CAAA;AACH,OAAA;MACA,OAAOC,cAAU,CAAC,CAChBC,2BAAa,CAACZ,IAAI,EAAES,KAAK,CAACC,MAAM,CAAC,EACjC,GAAGD,KAAK,CAACI,GAAG,CAAEC,CAAC,IAAKhB,IAAI,CAACU,SAAS,CAACM,CAAC,CAAC,CAAC,CACvC,CAAC,CAAA;KACH;AACDC,IAAAA,WAAW,EAAE,CAACC,KAAiB,EAAEC,MAAM,GAAG,CAAC,KAAK;AAC9C,MAAA,IAAI,OAAOjB,IAAI,KAAK,QAAQ,IAAIgB,KAAK,CAACE,KAAK,CAACD,MAAM,CAAC,CAACP,MAAM,KAAK,CAAC,EAAE;AAChE,QAAA,MAAM,IAAIS,oCAA6B,CAAC,OAAO,EAAE,EAAE,CAAC,CAAA;AACtD,OAAA;AACA,MAAA,MAAM,CAACC,YAAY,EAAEC,SAAS,CAAC,GAAGC,+BAAe,CAC/CtB,IAAI,EACJ,CAACF,IAAI,CAACI,SAAS,CAAC,EAChBc,KAAK,EACLC,MAAM,CACP,CAAA;AACDA,MAAAA,MAAM,GAAGI,SAAS,CAAA;MAClB,MAAME,MAAW,GAAG,EAAE,CAAA;AACtB,MAAA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,YAAY,EAAEI,CAAC,IAAI,CAAC,EAAE;AACxC,QAAA,MAAM,CAACf,KAAK,EAAEY,SAAS,CAAC,GAAGvB,IAAI,CAACiB,WAAW,CAACC,KAAK,EAAEC,MAAM,CAAC,CAAA;AAC1DM,QAAAA,MAAM,CAACE,IAAI,CAAChB,KAAK,CAAC,CAAA;AAClBQ,QAAAA,MAAM,GAAGI,SAAS,CAAA;AACpB,OAAA;AACA,MAAA,OAAO,CAACE,MAAM,EAAEN,MAAM,CAAC,CAAA;AACzB,KAAA;GACD,CAAA;AACH;;;;"}