{"version":3,"file":"set.cjs","sources":["../../src/set.ts"],"sourcesContent":["import {\n  mergeBytes,\n  Serializer,\n  SetSerializerOptions,\n} from '@metaplex-foundation/umi';\nimport { BeetSerializerError, DeserializingEmptyBufferError } from './errors';\nimport { getResolvedSize } from './getResolvedSize';\nimport { getSizeDescription } from './getSizeDescription';\nimport { getSizeFromChildren } from './getSizeFromChildren';\nimport { getSizePrefix } from './getSizePrefix';\nimport { u32 } from './numbers';\n\nexport function set<T, U extends T = T>(\n  item: Serializer<T, U>,\n  options: SetSerializerOptions = {}\n): Serializer<Set<T>, Set<U>> {\n  const size = options.size ?? u32();\n  if (size === 'remainder' && item.fixedSize === null) {\n    throw new BeetSerializerError(\n      'Serializers of \"remainder\" size must have fixed-size items.'\n    );\n  }\n  return {\n    description:\n      options.description ??\n      `set(${item.description}; ${getSizeDescription(size)})`,\n    fixedSize: getSizeFromChildren(size, [item.fixedSize]),\n    maxSize: getSizeFromChildren(size, [item.maxSize]),\n    serialize: (set: Set<T>) => {\n      if (typeof size === 'number' && set.size !== size) {\n        throw new BeetSerializerError(\n          `Expected set to have ${size} items but got ${set.size}.`\n        );\n      }\n      const itemBytes = Array.from(set, (value) => item.serialize(value));\n      return mergeBytes([getSizePrefix(size, set.size), ...itemBytes]);\n    },\n    deserialize: (bytes: Uint8Array, offset = 0) => {\n      const set: Set<U> = new Set();\n      if (typeof size === 'object' && bytes.slice(offset).length === 0) {\n        throw new DeserializingEmptyBufferError('set', new Set());\n      }\n      const [resolvedSize, newOffset] = getResolvedSize(\n        size,\n        [item.fixedSize],\n        bytes,\n        offset\n      );\n      offset = newOffset;\n      for (let i = 0; i < resolvedSize; i += 1) {\n        const [value, newOffset] = item.deserialize(bytes, offset);\n        offset = newOffset;\n        set.add(value);\n      }\n      return [set, offset];\n    },\n  };\n}\n"],"names":["set","item","options","size","u32","fixedSize","BeetSerializerError","description","getSizeDescription","getSizeFromChildren","maxSize","serialize","itemBytes","Array","from","value","mergeBytes","getSizePrefix","deserialize","bytes","offset","Set","slice","length","DeserializingEmptyBufferError","resolvedSize","newOffset","getResolvedSize","i","add"],"mappings":";;;;;;;;;;;;AAYO,SAASA,GAAG,CACjBC,IAAsB,EACtBC,OAA6B,GAAG,EAAE,EACN;AAC5B,EAAA,MAAMC,IAAI,GAAGD,OAAO,CAACC,IAAI,IAAIC,WAAG,EAAE,CAAA;EAClC,IAAID,IAAI,KAAK,WAAW,IAAIF,IAAI,CAACI,SAAS,KAAK,IAAI,EAAE;AACnD,IAAA,MAAM,IAAIC,0BAAmB,CAC3B,6DAA6D,CAC9D,CAAA;AACH,GAAA;EACA,OAAO;AACLC,IAAAA,WAAW,EACTL,OAAO,CAACK,WAAW,IAClB,CAAMN,IAAAA,EAAAA,IAAI,CAACM,WAAY,CAAIC,EAAAA,EAAAA,qCAAkB,CAACL,IAAI,CAAE,CAAE,CAAA,CAAA;IACzDE,SAAS,EAAEI,uCAAmB,CAACN,IAAI,EAAE,CAACF,IAAI,CAACI,SAAS,CAAC,CAAC;IACtDK,OAAO,EAAED,uCAAmB,CAACN,IAAI,EAAE,CAACF,IAAI,CAACS,OAAO,CAAC,CAAC;IAClDC,SAAS,EAAGX,GAAW,IAAK;MAC1B,IAAI,OAAOG,IAAI,KAAK,QAAQ,IAAIH,GAAG,CAACG,IAAI,KAAKA,IAAI,EAAE;QACjD,MAAM,IAAIG,0BAAmB,CAC1B,CAAuBH,qBAAAA,EAAAA,IAAK,kBAAiBH,GAAG,CAACG,IAAK,CAAA,CAAA,CAAE,CAC1D,CAAA;AACH,OAAA;AACA,MAAA,MAAMS,SAAS,GAAGC,KAAK,CAACC,IAAI,CAACd,GAAG,EAAGe,KAAK,IAAKd,IAAI,CAACU,SAAS,CAACI,KAAK,CAAC,CAAC,CAAA;AACnE,MAAA,OAAOC,cAAU,CAAC,CAACC,2BAAa,CAACd,IAAI,EAAEH,GAAG,CAACG,IAAI,CAAC,EAAE,GAAGS,SAAS,CAAC,CAAC,CAAA;KACjE;AACDM,IAAAA,WAAW,EAAE,CAACC,KAAiB,EAAEC,MAAM,GAAG,CAAC,KAAK;AAC9C,MAAA,MAAMpB,GAAW,GAAG,IAAIqB,GAAG,EAAE,CAAA;AAC7B,MAAA,IAAI,OAAOlB,IAAI,KAAK,QAAQ,IAAIgB,KAAK,CAACG,KAAK,CAACF,MAAM,CAAC,CAACG,MAAM,KAAK,CAAC,EAAE;QAChE,MAAM,IAAIC,oCAA6B,CAAC,KAAK,EAAE,IAAIH,GAAG,EAAE,CAAC,CAAA;AAC3D,OAAA;AACA,MAAA,MAAM,CAACI,YAAY,EAAEC,SAAS,CAAC,GAAGC,+BAAe,CAC/CxB,IAAI,EACJ,CAACF,IAAI,CAACI,SAAS,CAAC,EAChBc,KAAK,EACLC,MAAM,CACP,CAAA;AACDA,MAAAA,MAAM,GAAGM,SAAS,CAAA;AAClB,MAAA,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,YAAY,EAAEG,CAAC,IAAI,CAAC,EAAE;AACxC,QAAA,MAAM,CAACb,KAAK,EAAEW,SAAS,CAAC,GAAGzB,IAAI,CAACiB,WAAW,CAACC,KAAK,EAAEC,MAAM,CAAC,CAAA;AAC1DA,QAAAA,MAAM,GAAGM,SAAS,CAAA;AAClB1B,QAAAA,GAAG,CAAC6B,GAAG,CAACd,KAAK,CAAC,CAAA;AAChB,OAAA;AACA,MAAA,OAAO,CAACf,GAAG,EAAEoB,MAAM,CAAC,CAAA;AACtB,KAAA;GACD,CAAA;AACH;;;;"}