{"version":3,"file":"option.mjs","sources":["../../src/option.ts"],"sourcesContent":["import {\n  Serializer,\n  Option,\n  OptionSerializerOptions,\n  isSome,\n  mergeBytes,\n  none,\n  some,\n  Nullable,\n  isOption,\n  wrapNullable,\n} from '@metaplex-foundation/umi';\nimport { BeetSerializerError, DeserializingEmptyBufferError } from './errors';\nimport { getSizeDescription } from './getSizeDescription';\nimport { sumSerializerSizes } from './sumSerializerSizes';\nimport { u8 } from './numbers';\n\nexport function option<T, U extends T = T>(\n  item: Serializer<T, U>,\n  options: OptionSerializerOptions = {}\n): Serializer<Option<T> | Nullable<T>, Option<U>> {\n  const prefix = options.prefix ?? u8();\n  const fixed = options.fixed ?? false;\n  let descriptionSuffix = `; ${getSizeDescription(prefix)}`;\n  let fixedSize = item.fixedSize === 0 ? prefix.fixedSize : null;\n  if (fixed) {\n    if (item.fixedSize === null || prefix.fixedSize === null) {\n      throw new BeetSerializerError(\n        'Fixed options can only be used with fixed-size serializers'\n      );\n    }\n    descriptionSuffix += '; fixed';\n    fixedSize = prefix.fixedSize + item.fixedSize;\n  }\n  return {\n    description:\n      options.description ?? `option(${item.description + descriptionSuffix})`,\n    fixedSize,\n    maxSize: sumSerializerSizes([prefix.maxSize, item.maxSize]),\n    serialize: (optionOrNullable: Option<T> | Nullable<T>) => {\n      const option = isOption<T>(optionOrNullable)\n        ? optionOrNullable\n        : wrapNullable(optionOrNullable);\n\n      const prefixByte = prefix.serialize(Number(isSome(option)));\n      if (fixed) {\n        const itemFixedSize = item.fixedSize as number;\n        const itemBytes = isSome(option)\n          ? item.serialize(option.value).slice(0, itemFixedSize)\n          : new Uint8Array(itemFixedSize).fill(0);\n        return mergeBytes([prefixByte, itemBytes]);\n      }\n      const itemBytes = isSome(option)\n        ? item.serialize(option.value)\n        : new Uint8Array();\n      return mergeBytes([prefixByte, itemBytes]);\n    },\n    deserialize: (bytes: Uint8Array, offset = 0) => {\n      if (bytes.slice(offset).length === 0) {\n        throw new DeserializingEmptyBufferError('option', none());\n      }\n      const fixedOffset =\n        offset + (prefix.fixedSize ?? 0) + (item.fixedSize ?? 0);\n      const [isSome, prefixOffset] = prefix.deserialize(bytes, offset);\n      offset = prefixOffset;\n      if (isSome === 0) {\n        return [none(), fixed ? fixedOffset : offset];\n      }\n      const [value, newOffset] = item.deserialize(bytes, offset);\n      offset = newOffset;\n      return [some(value), fixed ? fixedOffset : offset];\n    },\n  };\n}\n"],"names":["option","item","options","prefix","u8","fixed","descriptionSuffix","getSizeDescription","fixedSize","BeetSerializerError","description","maxSize","sumSerializerSizes","serialize","optionOrNullable","isOption","wrapNullable","prefixByte","Number","isSome","itemFixedSize","itemBytes","value","slice","Uint8Array","fill","mergeBytes","deserialize","bytes","offset","length","DeserializingEmptyBufferError","none","fixedOffset","prefixOffset","newOffset","some"],"mappings":"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"}