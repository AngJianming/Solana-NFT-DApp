import { UmiError } from '@metaplex-foundation/umi';

/** @category Errors */
class BeetSerializerError extends UmiError {
  name = 'BeetSerializerError';
  constructor(message, cause) {
    super(message, 'plugin', 'Beet Serializer', cause);
  }
}
class OperationNotSupportedError extends BeetSerializerError {
  name = 'OperationNotSupportedError';
  constructor(operation) {
    super(`The operation [${operation}] is ` + `not supported by the Beet Serializer.`);
  }
}
class DeserializingEmptyBufferError extends BeetSerializerError {
  name = 'DeserializingEmptyBufferError';
  constructor(serializer, toleratedDefaultValue) {
    super(`Serializer [${serializer}] cannot deserialize empty buffers.`);
    this.toleratedDefaultValue = toleratedDefaultValue;
  }
}
class NotEnoughBytesError extends BeetSerializerError {
  name = 'NotEnoughBytesError';
  constructor(serializer, expected, actual) {
    super(`Serializer [${serializer}] expected ${expected} bytes, got ${actual}.`);
  }
}

export { BeetSerializerError, DeserializingEmptyBufferError, NotEnoughBytesError, OperationNotSupportedError };
//# sourceMappingURL=errors.mjs.map
