{"version":3,"file":"dataEnum.mjs","sources":["../../src/dataEnum.ts"],"sourcesContent":["import {\n  DataEnum,\n  DataEnumToSerializerTuple,\n  DataEnumSerializerOptions,\n  Serializer,\n  mergeBytes,\n} from '@metaplex-foundation/umi';\nimport { BeetSerializerError, DeserializingEmptyBufferError } from './errors';\nimport { maxSerializerSizes } from './maxSerializerSizes';\nimport { u8 } from './numbers';\nimport { sumSerializerSizes } from './sumSerializerSizes';\n\nexport function dataEnum<T extends DataEnum, U extends T = T>(\n  variants: DataEnumToSerializerTuple<T, U>,\n  options: DataEnumSerializerOptions = {}\n): Serializer<T, U> {\n  const prefix = options.size ?? u8();\n  const fieldDescriptions = variants\n    .map(\n      ([name, serializer]) =>\n        `${String(name)}${serializer ? `: ${serializer.description}` : ''}`\n    )\n    .join(', ');\n  const allVariantHaveTheSameFixedSize = variants.every(\n    (one, i, all) => one[1].fixedSize === all[0][1].fixedSize\n  );\n  const fixedVariantSize = allVariantHaveTheSameFixedSize\n    ? variants[0][1].fixedSize\n    : null;\n  const maxVariantSize = maxSerializerSizes(\n    variants.map(([, field]) => field.maxSize)\n  );\n  return {\n    description:\n      options.description ??\n      `dataEnum(${fieldDescriptions}; ${prefix.description})`,\n    fixedSize:\n      variants.length === 0\n        ? prefix.fixedSize\n        : sumSerializerSizes([prefix.fixedSize, fixedVariantSize]),\n    maxSize:\n      variants.length === 0\n        ? prefix.maxSize\n        : sumSerializerSizes([prefix.maxSize, maxVariantSize]),\n    serialize: (variant: T) => {\n      const discriminator = variants.findIndex(\n        ([key]) => variant.__kind === key\n      );\n      if (discriminator < 0) {\n        throw new BeetSerializerError(\n          `Invalid data enum variant. Got \"${variant.__kind}\", expected one of ` +\n            `[${variants.map(([key]) => key).join(', ')}]`\n        );\n      }\n      const variantPrefix = prefix.serialize(discriminator);\n      const variantSerializer = variants[discriminator][1];\n      const variantBytes = variantSerializer.serialize(variant as any);\n      return mergeBytes([variantPrefix, variantBytes]);\n    },\n    deserialize: (bytes: Uint8Array, offset = 0) => {\n      if (bytes.slice(offset).length === 0) {\n        throw new DeserializingEmptyBufferError('dataEnum');\n      }\n      const [discriminator, dOffset] = prefix.deserialize(bytes, offset);\n      offset = dOffset;\n      const variantField = variants[Number(discriminator)] ?? null;\n      if (!variantField) {\n        throw new BeetSerializerError(\n          `Data enum index \"${discriminator}\" is out of range. ` +\n            `Index should be between 0 and ${variants.length - 1}.`\n        );\n      }\n      const [variant, vOffset] = variantField[1].deserialize(bytes, offset);\n      offset = vOffset;\n      return [{ __kind: variantField[0], ...(variant ?? {}) } as U, offset];\n    },\n  };\n}\n"],"names":["dataEnum","variants","options","prefix","size","u8","fieldDescriptions","map","name","serializer","String","description","join","allVariantHaveTheSameFixedSize","every","one","i","all","fixedSize","fixedVariantSize","maxVariantSize","maxSerializerSizes","field","maxSize","length","sumSerializerSizes","serialize","variant","discriminator","findIndex","key","__kind","BeetSerializerError","variantPrefix","variantSerializer","variantBytes","mergeBytes","deserialize","bytes","offset","slice","DeserializingEmptyBufferError","dOffset","variantField","Number","vOffset"],"mappings":"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"}